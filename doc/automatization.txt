[[XA]]
== Automatic emulation

Automatic emulation is a feature in which user should be able to run the emulation in a
non-interactive mode, i.e. without any intervention. The emulation is being run from the command
line and user just watches until it finishes. At the end, he collects logs and/or output files
generated by plug-ins. He can then parse them and analyze them.

The feature has to be supported by individual plug-ins, so they will respect the settings from
command line. Please refer to the plug-ins' documentation for these details.

Every input must be prepared before the run and passed by command line. Example of running automatic
emulation is as follows:

    java -jar emuStudio.jar --auto --nogui --config "MITS Altair8800" --input example.asm --output compiler.txt

Command line argument `--auto` turns on the automatic emulation. If no other argument is provided,
emuStudio will start as usual by asking to open a virtual computer. But after this step it will run
the emulation with the settings as they appear in the computer configuration file (no source
code compilation is performed).

The `--nogui` parameter tells to emuStudio that we don't want to use GUI (graphical user interface)
at all. In that case, we must provide a virtual computer in the command line (using `--config`
argument).

NOTE: The plug-ins get the `--nogui` (as well as `--auto`) setting in the initialization phase,
but it's up to them if they will respect it. Whether they do or not should be in the documentation
for the plug-ins you use.

=== Analyzing the results

An important part of the analysis of result of the automatic emulation is the log saying what
happened. By default, each run of automatic emulation creates (overwrites) a log file called
`automatization.html`, located in the root where `emuStudio.jar` file is.

The log file is in HTML format as you might suggest and contains common messages organized in
a table. By default, each row of the table contains:

- a start datetime of the emulation,
- relative time (in milliseconds) since the emulation started,
- message level
- the message itself

Usually, the first message is about which computer has been loaded. The second phase is compilation
of the source code, if it is provided (by the `--input` argument in the command line). This should
be logged, too. The next phase is the emulation itself and involves not much details in the log.
Usually the most important messages are those if everything went fine, and the log file tries to
keep it that simple. The final messages just say that the automatic emulation has finished and the
state how it finished.

The log file format, and columns of the table can be of course customized, see chapter
<<XLC, Logger configuration>> for more details.
