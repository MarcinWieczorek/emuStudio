org 3

;začiatok RAM programu:	1000
;začiatok RAM dát:		2000

;R0 = RASP akumulátor
;R1 = úložisko pre inštrukcie / operandy načítavané z programu RAM
;R2 = PC pre program RAM
;R3 = začiatok simulačného programu

;===============kódy inštrukcií stroja RAM:==========================================================
;READ i 	- 1                	
;WRITE =i	- 2		
;WRITE i	- 3		
;LOAD =i	- 4	         	
;LOAD i	- 5		
;STORE i 	- 6		
;ADD =i	- 7		
;ADD i	- 8		
;SUB =i	- 9
;SUB i 	- 10
;MUL =i	- 11
;MUL i	- 12
;DIV =i	- 13
;DIV i	- 14
;JMP 	- 15		
;JZ	- 16		
;JGTZ	- 17
;HALT	- 18		
;READ *i	- 19		
;WRITE *i	- 20		
;LOAD *i	- 21		
;STORE *i	- 22		
;ADD *i	- 23		
;SUB *i	- 24
;MUL *i	- 25
;DIV *i	- 26


  LOAD =1000		
  STORE 1 		;v R1 je smerník pre zápis nasledujúcej inštrukcie rep. operandu z pásky
vstup:
  READ 2		;načíta vstup z pásky do R2
  LOAD 2
  SUB =-1
  JZ inicializacia	;je vstup rovný -1? ak áno skoč na inicializáciu

  LOAD 1	
  STORE 22
  LOAD 2
  STORE 0		;ak nie, ulož
 
  LOAD 1
  ADD =1
  STORE 1		;zvýš smerník
  JMP vstup  	;ďalší vstup

inicializacia:
  LOAD =1000	;R2=1000	 
  STORE 2		

zaciatok:
  LOAD 2		
  STORE 40
  LOAD 0	
  STORE 1		;načítanie inštrukcie RAM a uloženie do R1

  SUB =1		
  JZ readRegInstr	;ak je inštrukcia READ, skoč na "readRegister"
  LOAD 1		;ak nie, načítaj inštrukciu znovu, je v R1
  SUB =2
  JZ writeConstInstr
  LOAD 1
  SUB =3
  JZ writeRegInstr	
  LOAD 1
  SUB =4
  JZ loadConstInstr
  LOAD 1
  SUB =5		
  JZ loadRegInstr
  LOAD 1
  SUB =6
  JZ storeRegInstr
  LOAD 1		
  SUB =7
  JZ addConstInstr
  LOAD 1
  SUB =8
  JZ addRegInstr	
  LOAD 1
  SUB =9
  JZ subConstInstr
  LOAD 1
  SUB =10
  JZ subRegInstr	
  LOAD 1
  SUB =11
  JZ mulConstInstr
  LOAD 1		
  SUB =12
  JZ mulRegInstr
  LOAD 1
  SUB =13
  JZ divConstInstr
  LOAD 1		
  SUB =14
  JZ divRegInstr
  LOAD 1
  SUB =15		
  JZ jmpInstr
  LOAD 1
  SUB =16
  JZ jzInstr
  LOAD 1
  SUB =17	
  JZ jgtzInstr
  LOAD 1
  SUB =18
  JZ haltInstr	
  LOAD 1
  SUB =19
  JZ readIndirInstr
  LOAD 1
  SUB =20
  JZ writeIndirInstr	
  LOAD 1
  SUB =21
  JZ loadIndirInstr
  LOAD 1		
  SUB =22
  JZ storeIndirInstr
  LOAD 1
  SUB =23
  JZ addIndirInstr
  LOAD 1	
  SUB =24
  JZ subIndirInstr
  LOAD 1
  SUB =25		
  JZ mulIndirInstr
  LOAD 1
  SUB =26
  JZ divIndirInstr

;==========simulácie jednotlivých inštrukcií stroja RAM================================
readRegInstr:
  LOAD 2
  ADD =1		
  STORE 2 		;inkrementácia PC na adresu operandu inštrukcie
  
  LOAD  2
  STORE 208
  LOAD  0			
  ADD =2000	;úprava adresy operandu, registre RAM sú posunuté o začiatok dát, ten je 2000
  STORE 1		;uloženie operandu

  LOAD 1
  STORE 218
  READ 0		;realizácia READ i
  
  LOAD 2		
  ADD =1
  STORE 2		;inkrementácia PC
  JMP zaciatok	;opakuj simulačnú slučku
readIndirInstr:
  LOAD 2		
  ADD =1
  STORE 2

  LOAD 2
  STORE 238
  LOAD 0             
  ADD =2000	
  STORE 244
 
  LOAD 0  
  ADD =2000	
  STORE 250
  READ 0		;realizácia READ *i

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok  
loadConstInstr:
  LOAD 2
  ADD =1
  STORE 2		

  LOAD 2		
  STORE 270
  LOAD 0
 
  STORE 2000	;uloženie konštanty do akumulátora RAM, teda realizácia LOAD =i

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok
loadRegInstr:
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2		
  STORE 292
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 302
  LOAD 0
  STORE 2000 	;uloženie obsahu registra i do akumulátora RAM, teda realizácia LOAD i
  
  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok
loadIndirInstr:	
  LOAD 2		
  ADD =1
  STORE 2

  LOAD 2
  STORE 324
  LOAD 0             
  ADD =2000	
  STORE 330

  LOAD 0
  ADD =2000	
  STORE 336
  LOAD 0  
  STORE 2000	;uloženie obsahu registra [i] do akumulátora RAM, teda realizácia LOAD *i

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
storeRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 358
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 370
  LOAD 2000	;príprava obsahu akumulátora RAM
  STORE 0 		;uloženie obsahu akumulátora RAM do registra i, teda realizácia STORE i

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok 
storeIndirInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 390
  LOAD 0
  ADD =2000
  STORE 396

  LOAD 0
  ADD =2000	
  STORE 404
  LOAD 2000	;príprava obsahu akumulátora RAM
  STORE 0 		;uloženie obsahu akumulátora RAM do registra [i], teda realizácia STORE *i

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok
writeConstInstr:
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2	
  STORE 424
  WRITE 0

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok      
writeRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 444
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 454
  WRITE 0  

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok 
writeIndirInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 474
  LOAD 0
  ADD =2000
  STORE 480

  LOAD 0
  ADD =2000	
  STORE 486
  WRITE 0

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok 
jmpInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 506
  LOAD 0
  ADD =1000	;úprava operandu, program začína od 1000, teda pripočítaj k adrese skoku 1000
  STORE 1 

  LOAD 1
  STORE 2		;nastavenie PC stroja RAM na adresu skoku

  JMP zaciatok 
jzInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 528
  LOAD 0
  ADD =1000	;úprava operandu, program začína od 1000, teda pripočítaj k adrese skoku 1000
  STORE 1 
  
  LOAD 2000	
  JZ isZero	;ak je RAM akumulátor 0, skok

  LOAD 2		;inak, inkrementuj PC
  ADD =1
  STORE 2
  JMP zaciatok

 isZero:
   LOAD 1
   STORE 2
   JMP zaciatok  
jgtzInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 562
  LOAD 0
  ADD =1000	;úprava operandu, program začína od 1000, teda pripočítaj k adrese skoku 1000
  STORE 1 
  
  LOAD 2000	
  JZ isGTZero	

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok

 isGTZero:
   LOAD 1
   STORE 2
   JMP zaciatok  
haltInstr:
  HALT  
addConstInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2	
  STORE 600
  LOAD 2000	;načítaj akumulátor RAM 
  ADD 0		;realizácia ADD =i
  STORE 2000	;uloženie výsledku do späť do akumulátora RAM

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
addRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 622
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 634
  LOAD 2000
  ADD 0
  STORE 2000

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
addIndirInstr:
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2
  STORE 656
  LOAD 0
  ADD =2000
  STORE 662
  
  LOAD 0
  ADD =2000	
  STORE 670
  LOAD 2000
  ADD 0
  STORE 2000

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok  
subConstInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2	
  STORE 694
  LOAD 2000	;načítaj akumulátor RAM 
  SUB 0		;realizácia SUB =i
  STORE 2000	;uloženie výsledku do späť do akumulátora RAM

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
subRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 716
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 728
  LOAD 2000
  SUB 0
  STORE 2000

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
subIndirInstr:
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2
  STORE 750
  LOAD 0
  ADD =2000
  STORE 756
  
  LOAD 0
  ADD =2000	
  STORE 764
  LOAD 2000
  SUB 0
  STORE 2000

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok  
mulConstInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2	
  STORE 788
  LOAD 2000	;načítaj akumulátor RAM 
  MUL 0		;realizácia MUL =i
  STORE 2000	;uloženie výsledku do späť do akumulátora RAM

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
mulRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 810
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 822
  LOAD 2000
  MUL 0
  STORE 2000

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
mulIndirInstr:
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2
  STORE 844
  LOAD 0
  ADD =2000
  STORE 850
  
  LOAD 0
  ADD =2000	
  STORE 858
  LOAD 2000
  MUL 0
  STORE 2000

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok  
divConstInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2	
  STORE 882
  LOAD 2000	;načítaj akumulátor RAM 
  DIV 0		;realizácia DIV =i
  STORE 2000	;uloženie výsledku do späť do akumulátora RAM

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
divRegInstr:
  LOAD 2
  ADD =1
  STORE 2

  LOAD 2
  STORE 904
  LOAD 0
  ADD =2000
  STORE 1

  LOAD 1
  STORE 916
  LOAD 2000
  DIV 0
  STORE 2000

  LOAD 2		
  ADD =1
  STORE 2
  JMP zaciatok
divIndirInstr: 
  LOAD 2
  ADD =1
  STORE 2
  
  LOAD 2
  STORE 938
  LOAD 0
  ADD =2000
  STORE 944
  
  LOAD 0
  ADD =2000	
  STORE 952
  LOAD 2000
  DIV 0
  STORE 2000

  LOAD 2
  ADD =1
  STORE 2
  JMP zaciatok  
  
