/*
 * Copyright (C) 2017 vbmacher
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package net.sf.emustudio.ssem.display;

import emulib.plugins.memory.Memory;
import emulib.plugins.memory.MemoryContext;
import java.util.Objects;
import javax.swing.JDialog;

public class DisplayDialog extends JDialog {
    private final MemoryContext<Byte> memory;
    private final DisplayPanel displayPanel;

    public DisplayDialog(MemoryContext<Byte> memory) {
        this.memory = Objects.requireNonNull(memory);
        this.displayPanel = new DisplayPanel();
        
        super.setLocationRelativeTo(null);
        initComponents();

        scrollPane.setViewportView(displayPanel);
        
        initListener();
    }
    
    private void initListener() {
        memory.addMemoryListener(new Memory.MemoryListener() {
            @Override
            public void memoryChanged(int memoryPosition) {
                displayPanel.writeRow(memory.readWord(memoryPosition), memoryPosition / 4);
            }

            @Override
            public void memorySizeChanged() {
                // never happens
            }
        });
    }

    public void reset() {
        displayPanel.clear();
        for (int i = 0; i < 4 * 32; i++) {
            displayPanel.writeRow(memory.readWord(i), i / 4);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SSEM CRT Display");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
