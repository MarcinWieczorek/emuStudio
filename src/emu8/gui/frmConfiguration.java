/*
 * frmConfiguration.java
 *
 * Created on Streda, 2007, august 8, 8:45
 */

package emu8.gui;
import emu8.*;
import emu8.gui.frmStudio;
import javax.swing.*;
import javax.swing.event.*;
import java.io.*;
import java.util.Properties;
import javax.swing.text.*;

/**
 *
 * @author  vbmacher
 */
public class frmConfiguration extends javax.swing.JFrame {
    private File selectedConfig;
    private ArchitectureLoader aloader;
    private Properties settings;
    private String configName;
    
    /** Creates new form frmConfiguration */
    public frmConfiguration() {
        initComponents();
        aloader = Main.getInstance().emuConfig;
        this.setLocationRelativeTo(null);
    }
    
    // existing configurations list model
    private class lstModel extends AbstractListModel {
        private String[] allModels;
        public lstModel(int index) {
            if (index == 0)
                allModels = aloader.getAllNames(aloader.configsDir, ".props");
            else
                allModels = aloader.getAllNames(aloader.devicesDir, ".jar");
        }
        public Object getElementAt(int index) {
            return allModels[index].substring(0,
                    allModels[index].lastIndexOf("."));
        }
        public int getSize() {
            if (allModels != null) return allModels.length;
            else return 0;
        }
    }
    
    private class cmbModel extends DefaultComboBoxModel {
        private String[] allModels;
        public cmbModel(int index) {
            if (index == 0)
                allModels = aloader.getAllNames(aloader.cpusDir, ".jar");
            else if (index == 1)
                allModels = aloader.getAllNames(aloader.memoriesDir, ".jar");
            else
                allModels = aloader.getAllNames(aloader.compilersDir, ".jar");
        }
        public int getSize() {
            if (allModels == null) return 0;
            return allModels.length;
        }
        public Object getElementAt(int index) {
            return allModels[index].substring(0, allModels[index].lastIndexOf("."));
        }
    }
    
    // updates gui controls according to settings
    private void updateGUI(String name) {
        this.configName = name;
        txtConfigName.setText(name);
        cmbCPUType.setSelectedItem(settings.getProperty("cpu"));
        cmbCompiler.setSelectedItem(settings.getProperty("compiler"));
        cmbMemoryType.setSelectedItem(settings.getProperty("memory"));
        txtMemorySize.setText(String.valueOf(settings.getProperty("memorySize")));
        int j;
        for (int i = 0; i < 256; i++) {
            if (settings.containsKey("device" + i)) {
                String devName = settings.getProperty("device" + i);
                j = lstDevices.getNextMatch(devName,0,Position.Bias.Forward);
                if (j != -1 && 
                        lstDevices.getModel().getElementAt(j).equals(devName))
                    lstDevices.addSelectionInterval(j,j);
            }
        }
    }
    
    private void updateSettings() {
        this.configName = txtConfigName.getText();
        settings.clear();
        settings.setProperty("cpu", (String)cmbCPUType.getSelectedItem());
        settings.setProperty("compiler", (String)cmbCompiler.getSelectedItem());
        settings.setProperty("memory", (String)cmbMemoryType.getSelectedItem());
        settings.setProperty("memorySize", txtMemorySize.getText());

        for (int i = 0; i < lstDevices.getSelectedValues().length; i++)
            settings.setProperty("device" + i, 
                    (String)lstDevices.getSelectedValues()[i]);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneTab = new javax.swing.JTabbedPane();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        lstConfigs = new javax.swing.JList();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        cmbCPUType = new javax.swing.JComboBox();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        cmbMemoryType = new javax.swing.JComboBox();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        txtMemorySize = new javax.swing.JTextField();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        txtConfigName = new javax.swing.JTextField();
        javax.swing.JButton jButton3 = new javax.swing.JButton();
        javax.swing.JButton jButton4 = new javax.swing.JButton();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        cmbCompiler = new javax.swing.JComboBox();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        lstDevices = new javax.swing.JList();
        javax.swing.JButton buttonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Microcomputer configuration control");
        setResizable(false);

        lstConfigs.setModel(new lstModel(0));
        lstConfigs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstConfigs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstConfigsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstConfigs);

        jLabel3.setText("Choose one from following configurations:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addContainerGap())
        );

        paneTab.addTab("Existing configuration", jPanel1);

        jLabel1.setText("<html>Create new or edit existing microcomputer architecture configuration.");

        jLabel2.setText("Select CPU type:");

        cmbCPUType.setModel(new cmbModel(0));

        jLabel5.setText("Select memory:");

        cmbMemoryType.setModel(new cmbModel(1));

        jLabel8.setText("Type:");

        jLabel10.setText("Size (in bytes):");

        txtMemorySize.setText("65536");

        jLabel9.setText("Select devices:");

        jLabel11.setText("Enter config file name:");

        jButton3.setText("Clear selection");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Select all");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("Select compiler:");

        cmbCompiler.setModel(new cmbModel(2));

        lstDevices.setModel(new lstModel(1));
        jScrollPane2.setViewportView(lstDevices);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(58, 58, 58))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addGap(40, 40, 40))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGap(16, 16, 16))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbMemoryType, javax.swing.GroupLayout.Alignment.TRAILING, 0, 136, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtMemorySize, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                .addGap(211, 211, 211))
                            .addComponent(cmbCompiler, 0, 250, Short.MAX_VALUE)
                            .addComponent(cmbCPUType, 0, 250, Short.MAX_VALUE)
                            .addComponent(txtConfigName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtConfigName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCPUType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCompiler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbMemoryType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMemorySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                .addGap(84, 84, 84))
        );

        paneTab.addTab("New/edit configuration", jPanel2);

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(386, Short.MAX_VALUE)
                        .addComponent(buttonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(paneTab, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(paneTab, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonOK)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        if (paneTab.getSelectedIndex() == 0) {
            if (lstConfigs.getSelectedIndex() == -1) {
                Main.showErrorMessage("Error: No configuration is selected.");
                return;
            }
        } else {
            if (txtConfigName.getText().equals("")) {
                Main.showErrorMessage("Error: Configuration name can't be empty.");
                return;
            } else if (cmbCPUType.getSelectedIndex() == -1) {
                Main.showErrorMessage("Error: CPU have to be selected.");
                return;
            } else if (cmbCompiler.getSelectedIndex() == -1) {
                Main.showErrorMessage("Error: Compiler have to be selected.");
                return;
            } else if (cmbMemoryType.getSelectedIndex() == -1) {
                Main.showErrorMessage("Error: Memory type have to be selected.");
                return;
            }
            updateSettings();
            aloader.writeConfig(this.configName, settings);
        }
        Main.getInstance().setCurrentArch(aloader.load(configName, settings)); 
        frmStudio stud = new frmStudio();
        this.dispose();
        stud.setVisible(true);
}//GEN-LAST:event_buttonOKActionPerformed

    private void lstConfigsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstConfigsValueChanged
        try {
            String name = (String)lstConfigs.getSelectedValue();
            if ((settings = aloader.
                    readConfig(name)) == null) {
                lstConfigs.clearSelection();
                return;
            }
            updateGUI(name);
        } catch (Exception e) {}
    }//GEN-LAST:event_lstConfigsValueChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        lstDevices.clearSelection();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        lstDevices.setSelectionInterval(0,lstDevices.getModel().getSize()-1);
    }//GEN-LAST:event_jButton4ActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JComboBox cmbCPUType;
    javax.swing.JComboBox cmbCompiler;
    javax.swing.JComboBox cmbMemoryType;
    javax.swing.JList lstConfigs;
    javax.swing.JList lstDevices;
    javax.swing.JTabbedPane paneTab;
    javax.swing.JTextField txtConfigName;
    javax.swing.JTextField txtMemorySize;
    // End of variables declaration//GEN-END:variables
    
}
