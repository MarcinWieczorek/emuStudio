/*
 * FindDialog.java
 *
 * Created on ${date}, 11:26
 * hold to: KISS, YAGNI
 *
 */

package gui;

import gui.utils.FindText;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import javax.swing.ComboBoxModel;
import javax.swing.JTextPane;
import javax.swing.event.ListDataListener;
import runtime.StaticDialogs;

/**
 *
 * @author  vbmacher
 */
@SuppressWarnings("serial")
public class FindDialog extends javax.swing.JDialog {
    private static ArrayList<String> list = new ArrayList<String>();
    private static ArrayList<String> rlist = new ArrayList<String>();
    private JTextPane textPane;
    
    private class CMBModel implements ComboBoxModel {
        private int in = -1;
        private ArrayList<String> clist;
        
        public CMBModel(ArrayList<String> clist) {
            this.clist = clist;
        }
        public void setSelectedItem(Object anItem) {
            in = clist.indexOf(anItem);
        }
        public Object getSelectedItem() {
            if (in != -1) return clist.get(in);
            else return null;
        }
        public int getSize() { return clist.size(); }
        public Object getElementAt(int index) {
            return clist.get(index);
        }
        public void addListDataListener(ListDataListener l) {}
        public void removeListDataListener(ListDataListener l) {}
    }
    
    /** Creates new form FindDialog */
    public FindDialog(StudioFrame parent, boolean modal, JTextPane pane) {
        super(parent, modal);
        this.textPane = pane;
        initComponents();
        
        switch(FindText.getThis().getDirection()) {
            case FindText.DIRECTION_TO_END: 
                endRadio.setSelected(true); break;
            case FindText.DIRECTION_TO_START:
                startRadio.setSelected(true); break;
            case FindText.DIRECTION_ALL:
                allRadio.setSelected(true); break;
        }
        caseCheck.setSelected(FindText.getThis().isCaseSensitive());
        wholeCheck.setSelected(FindText.getThis().isWholeWords());
        
        searchCombo.setModel(new CMBModel(list));
        replaceCombo.setModel(new CMBModel(rlist));
        
        String str = FindText.getThis().getFindExpr();
        String rstr = FindText.getThis().replacement;
        for (int i = 0; i < list.size(); i++)
            if (((String)list.get(i)).equals(str)) {
                searchCombo.setSelectedIndex(i);
                searchCombo.getEditor().setItem(str);
                break;
            }
        for (int i = 0; i < rlist.size(); i++)
            if (((String)rlist.get(i)).equals(rstr)) {
                replaceCombo.setSelectedIndex(i);
                replaceCombo.getEditor().setItem(rstr);
                break;
            }
        this.setLocationRelativeTo(parent);
    }
    
    private String saveGUI() {
        if (endRadio.isSelected()) 
            FindText.getThis().setDirection(FindText.DIRECTION_TO_END);
        else if (startRadio.isSelected())
            FindText.getThis().setDirection(FindText.DIRECTION_TO_START);
        else FindText.getThis().setDirection(FindText.DIRECTION_ALL);
        
        byte checks = 0;
        if (caseCheck.isSelected()) checks |= FindText.CASE_SENSITIVE;
        if (wholeCheck.isSelected()) checks |= FindText.WHOLE_WORDS;
        FindText.getThis().setParams(checks);
        
        String str = (String)searchCombo.getEditor().getItem();
        if (!str.equals("") && !list.contains(str)) {
            list.add(str);
            searchCombo.setModel(new CMBModel(list));
            searchCombo.setSelectedIndex(list.indexOf(str));
            searchCombo.getEditor().setItem(str);
        }
        String rstr = (String)replaceCombo.getEditor().getItem();
        FindText.getThis().replacement = rstr;
        if (!rstr.equals("") && !rlist.contains(rstr)) {
            rlist.add(rstr);
            replaceCombo.setModel(new CMBModel(rlist));
            replaceCombo.setSelectedIndex(rlist.indexOf(rstr));
            replaceCombo.getEditor().setItem(rstr);
        }
        return str;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup buttonGroup1 = new javax.swing.ButtonGroup();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        searchCombo = new javax.swing.JComboBox();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        caseCheck = new javax.swing.JCheckBox();
        wholeCheck = new javax.swing.JCheckBox();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        endRadio = new javax.swing.JRadioButton();
        startRadio = new javax.swing.JRadioButton();
        allRadio = new javax.swing.JRadioButton();
        javax.swing.JButton searchButton = new javax.swing.JButton();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        replaceCombo = new javax.swing.JComboBox();
        javax.swing.JButton replaceButton = new javax.swing.JButton();
        javax.swing.JButton replaceAllButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Find/replace text");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setText("Search for:");

        searchCombo.setEditable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        caseCheck.setText("Case sensitive");

        wholeCheck.setText("Whole words");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(caseCheck)
                    .addComponent(wholeCheck))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(caseCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wholeCheck)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Direction"));

        buttonGroup1.add(endRadio);
        endRadio.setSelected(true);
        endRadio.setText("To end of document");

        buttonGroup1.add(startRadio);
        startRadio.setText("To start of document");

        buttonGroup1.add(allRadio);
        allRadio.setText("All document");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endRadio)
                    .addComponent(startRadio)
                    .addComponent(allRadio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(endRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allRadio)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Replace with:");

        replaceCombo.setEditable(true);

        replaceButton.setText("Replace");
        replaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceButtonActionPerformed(evt);
            }
        });

        replaceAllButton.setText("Replace all");
        replaceAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(replaceAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replaceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replaceCombo, 0, 293, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(replaceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(replaceButton)
                    .addComponent(replaceAllButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String str = saveGUI();        
        try {
            FindText.getThis().createPattern(str);
            if (FindText.getThis().findNext(textPane.getText(),
                    textPane.getCaretPosition(), 
                    textPane.getDocument().getEndPosition().getOffset()-1)) {
                textPane.select(FindText.getThis().getMatchStart(), 
                        FindText.getThis().getMatchEnd());
                textPane.grabFocus();
                dispose();
            } else StaticDialogs.showMessage("Expression was not found");
        } catch (PatternSyntaxException e) {
            StaticDialogs.showErrorMessage("Pattern syntax error");
            searchCombo.grabFocus();
            return;
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void replaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceButtonActionPerformed
        String str = saveGUI();
        try {
            FindText.getThis().createPattern(str);
            FindText.getThis().replacement = (String)
                    replaceCombo.getEditor().getItem();
            if (FindText.getThis().replaceNext(textPane.getText(),
                    textPane.getCaretPosition(),
                    textPane.getDocument().getEndPosition().getOffset()-1)) {
                textPane.setText(FindText.getThis().getReplacedString());
                textPane.grabFocus();
                dispose();
            } else StaticDialogs.showMessage("Expression was not found");
        } catch (PatternSyntaxException e) {
            StaticDialogs.showErrorMessage("Pattern syntax error");
            searchCombo.grabFocus();
            return;
        }
}//GEN-LAST:event_replaceButtonActionPerformed

    private void replaceAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceAllButtonActionPerformed
        String str = saveGUI();
        try {
            FindText.getThis().createPattern(str);
            FindText.getThis().replacement = (String)
                    replaceCombo.getEditor().getItem();
            if (FindText.getThis().replaceAll(textPane.getText(),
                    textPane.getCaretPosition(),
                    textPane.getDocument().getEndPosition().getOffset()-1)) {
                textPane.setText(FindText.getThis().getReplacedString());
                textPane.grabFocus();
                dispose();
            } else StaticDialogs.showMessage("Expression was not found");
        } catch (PatternSyntaxException e) {
            StaticDialogs.showErrorMessage("Pattern syntax error");
            searchCombo.grabFocus();
            return;
        }
}//GEN-LAST:event_replaceAllButtonActionPerformed
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JRadioButton allRadio;
    javax.swing.JCheckBox caseCheck;
    javax.swing.JRadioButton endRadio;
    javax.swing.JComboBox replaceCombo;
    javax.swing.JComboBox searchCombo;
    javax.swing.JRadioButton startRadio;
    javax.swing.JCheckBox wholeCheck;
    // End of variables declaration//GEN-END:variables
    
}
